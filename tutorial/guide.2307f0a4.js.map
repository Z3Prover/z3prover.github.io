{"mappings":"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","sources":["z3-wasm/guide.1c95a30a.js","z3-wasm/node_modules/coi-serviceworker/coi-serviceworker.js"],"sourcesContent":[null,"/*! coi-serviceworker v0.1.6 - Guido Zuidhof, licensed under MIT */\nif (typeof window === 'undefined') {\n    self.addEventListener(\"install\", () => self.skipWaiting());\n    self.addEventListener(\"activate\", (event) => event.waitUntil(self.clients.claim()));\n\n    self.addEventListener(\"message\", (ev) => {\n        if (ev.data && ev.data.type === \"deregister\") {\n            self.registration\n                .unregister()\n                .then(() => {\n                    return self.clients.matchAll();\n                })\n                .then(clients => {\n                    clients.forEach((client) => client.navigate(client.url));\n                });\n        }\n    });\n\n    self.addEventListener(\"fetch\", function (event) {\n        if (event.request.cache === \"only-if-cached\" && event.request.mode !== \"same-origin\") {\n            return;\n        }\n\n        event.respondWith(\n            fetch(event.request)\n                .then((response) => {\n                    if (response.status === 0) {\n                        return response;\n                    }\n\n                    const newHeaders = new Headers(response.headers);\n                    newHeaders.set(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n                    newHeaders.set(\"Cross-Origin-Opener-Policy\", \"same-origin\");\n\n                    return new Response(response.body, {\n                        status: response.status,\n                        statusText: response.statusText,\n                        headers: newHeaders,\n                    });\n                })\n                .catch((e) => console.error(e))\n        );\n    });\n\n} else {\n    (() => {\n        // You can customize the behavior of this script through a global `coi` variable.\n        const coi = {\n            shouldRegister: () => true,\n            shouldDeregister: () => false,\n            doReload: () => window.location.reload(),\n            quiet: false,\n            ...window.coi\n        }\n\n        const n = navigator;\n        if (coi.shouldDeregister() && n.serviceWorker && n.serviceWorker.controller) {\n            n.serviceWorker.controller.postMessage({ type: \"deregister\" });\n        }\n\n        // If we're already coi: do nothing. Perhaps it's due to this script doing its job, or COOP/COEP are\n        // already set from the origin server. Also if the browser has no notion of crossOriginIsolated, just give up here.\n        if (window.crossOriginIsolated !== false || !coi.shouldRegister()) return;\n\n        if (!window.isSecureContext) {\n            !coi.quiet && console.log(\"COOP/COEP Service Worker not registered, a secure context is required.\");\n            return;\n        }\n\n        // In some environments (e.g. Chrome incognito mode) this won't be available\n        if (n.serviceWorker) {\n            n.serviceWorker.register(window.document.currentScript.src).then(\n                (registration) => {\n                    !coi.quiet & console.log(\"COOP/COEP Service Worker registered\", registration.scope);\n\n                    registration.addEventListener(\"updatefound\", () => {\n                        !coi.quiet && console.log(\"Reloading page to make use of updated COOP/COEP Service Worker.\");\n                        coi.doReload()\n                    });\n\n                    // If the registration is active, but it's not controlling the page\n                    if (registration.active && !n.serviceWorker.controller) {\n                        !coi.quiet && console.log(\"Reloading page to make use of COOP/COEP Service Worker.\");\n                        coi.doReload()\n                    }\n                },\n                (err) => {\n                    !coi.quiet && console.error(\"COOP/COEP Service Worker failed to register:\", err);\n                }\n            );\n        }\n    })();\n}\n"],"names":["window","self","addEventListener","skipWaiting","event","waitUntil","clients","claim","ev","data","type","registration","unregister","then","matchAll","forEach","client","navigate","url","request","cache","mode","respondWith","fetch","response","status","newHeaders","Headers","headers","set","Response","body","statusText","catch","e","console","error","coi","shouldRegister","shouldDeregister","doReload","location","reload","quiet","n","navigator","serviceWorker","controller","postMessage","crossOriginIsolated","isSecureContext","register","document","currentScript","src","log","scope","active","err"],"version":3,"file":"guide.2307f0a4.js.map","sourceRoot":"/__parcel_source_root/"}